name: AFT Append Module
run-name: AFT Append (${{ github.event.client_payload.correlation_id }})

on:
  repository_dispatch:
    types: [aft-append]

permissions:
  contents: write

concurrency:
  group: aft-append-${{ github.event.client_payload.ambiente }}
  cancel-in-progress: false

jobs:
  append:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Mapear arquivo por ambiente
        id: map
        run: |
          env="${{ github.event.client_payload.ambiente }}"
          case "$env" in
            lab) file="terraform/laboratory-accounts.tf" ;;
            dev) file="terraform/development-accounts.tf" ;;
            hml) file="terraform/staging-accounts.tf" ;;
            prd) file="terraform/production-accounts.tf" ;;
            *)   echo "Ambiente inv치lido: $env"; exit 1 ;;
          esac
          echo "file=$file" >> $GITHUB_OUTPUT

      - name: Preparar bloco HCL e label
        id: prep
        env:
          HCL: ${{ github.event.client_payload.hcl }}
        run: |
          lbl=$(printf "%s" "$HCL" | sed -n 's/.*module[[:space:]]*\"\([^\"]\+\)\".*/\1/p' | head -n1)
          [ -z "$lbl" ] && lbl="aft-module-${RANDOM}"
          {
            printf "\n# ---- AFT GENERATED START: %s ----\n" "$lbl"
            printf "%s\n" "$HCL" | sed -e 's/\r$//'
            printf "# ---- AFT GENERATED END:   %s ----\n\n" "$lbl"
          } > wrapped.tf
          echo "label=$lbl" >> $GITHUB_OUTPUT

      - name: Duplicidade (label e AccountName/account_name em terraform/)
        id: dup
        env:
          HCL: ${{ github.event.client_payload.hcl }}
        run: |
          file="${{ steps.map.outputs.file }}"
          lbl="${{ steps.prep.outputs.label }}"
          mkdir -p "$(dirname "$file")"; touch "$file"

          dup=false
          if git grep -n --fixed-strings "AFT GENERATED START: ${lbl}" -- terraform >/dev/null 2>&1; then dup=true; fi
          if [ "$dup" = false ] && git grep -n -E "module[[:space:]]+\"${lbl}\"[[:space:]]*\\{" -- terraform >/dev/null 2>&1; then dup=true; fi
          acc1=$(printf "%s" "$HCL" | sed -n 's/.*AccountName[[:space:]]*=[[:space:]]*\"\([^\"]\+\)\".*/\1/p' | head -n1)
          acc2=$(printf "%s" "$HCL" | sed -n 's/.*account_name[[:space:]]*=[[:space:]]*\"\([^\"]\+\)\".*/\1/p' | head -n1)
          if [ "$dup" = false ] && [ -n "$acc1" ] && git grep -n --fixed-strings "\"${acc1}\"" -- terraform >/dev/null 2>&1; then dup=true; fi
          if [ "$dup" = false ] && [ -n "$acc2" ] && git grep -n --fixed-strings "\"${acc2}\"" -- terraform >/dev/null 2>&1; then dup=true; fi
          echo "duplicate=$dup" >> $GITHUB_OUTPUT
          if [ "$dup" = true ]; then echo "游대 Duplicado. Nada ser치 anexado."; fi

      - name: Anexar bloco
        if: steps.dup.outputs.duplicate == 'false'
        run: |
          file="${{ steps.map.outputs.file }}"
          tmp="$(mktemp)"
          cp "$file" "$tmp"
          tail -c1 "$tmp" | od -An -t o1 | grep -q '012' || echo >> "$tmp"
          cat wrapped.tf >> "$tmp"
          mv "$tmp" "$file"

      - name: Commit & push
        if: steps.dup.outputs.duplicate == 'false'
        run: |
          git config user.name  "aft-bot"
          git config user.email "aft-bot@users.noreply.github.com"
          git add "${{ steps.map.outputs.file }}"
          git commit -m "AFT: append ${{ steps.prep.outputs.label }} to ${{ steps.map.outputs.file }}"
          git pull --rebase || true
          git push

      - name: RESULT_APPENDED
        if: steps.dup.outputs.duplicate == 'false'
        run: echo "OK - bloco anexado"

      - name: RESULT_DUPLICATE
        if: steps.dup.outputs.duplicate == 'true'
        run: echo "DUPLICATE - bloco j치 existente, nada alterado"

      - name: Summary
        run: |
          if [ "${{ steps.dup.outputs.duplicate }}" = "true" ]; then
            echo "### Resultado: **duplicado**" >> $GITHUB_STEP_SUMMARY
          else
            echo "### Resultado: **anexado**" >> $GITHUB_STEP_SUMMARY
          fi

    
